{
  "address": "0xe7f1725E7734CE288F8367e1Bb143E90bb3F0512",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_priceFeed",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [],
      "name": "FundMe__NotOwner",
      "type": "error"
    },
    {
      "stateMutability": "payable",
      "type": "fallback"
    },
    {
      "inputs": [],
      "name": "MINIMUM_USD",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "cheaperWithdraw",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "fund",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "funders",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_funder",
          "type": "address"
        }
      ],
      "name": "getAddressToAmountFunded",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "index",
          "type": "uint256"
        }
      ],
      "name": "getFunder",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getOwner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getPriceFeed",
      "outputs": [
        {
          "internalType": "contract AggregatorV3Interface",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "withdraw",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "stateMutability": "payable",
      "type": "receive"
    }
  ],
  "transactionHash": "0x68cd036a67ca2ac97467a5f4346df4c1ebb116f08dd48625c25efcc4b19fca09",
  "receipt": {
    "to": null,
    "from": "0xf39Fd6e51aad88F6F4ce6aB8827279cffFb92266",
    "contractAddress": "0xe7f1725E7734CE288F8367e1Bb143E90bb3F0512",
    "transactionIndex": 0,
    "gasUsed": "1074014",
    "logsBloom": "0x
    "blockHash": "0xc1ca4d3346c6dd99e26f1f40a4dfa59a872a68ea0303e1d1b554d1dd51522e54",
    "transactionHash": "0x68cd036a67ca2ac97467a5f4346df4c1ebb116f08dd48625c25efcc4b19fca09",
    "logs": [],
    "blockNumber": 2,
    "cumulativeGasUsed": "1074014",
    "status": 1,
    "byzantium": true
  },
  "args": [
    "0x5FbDB2315678afecb367f032d93F642f64180aa3"
  ],
  "numDeployments": 1,
  "solcInputHash": "57b48ff01c9ee5e151d1bf41989e3025",
  "metadata": "{\"compiler\":{\"version\":\"0.8.8+commit.dddeac2f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_priceFeed\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"FundMe__NotOwner\",\"type\":\"error\"},{\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"inputs\":[],\"name\":\"MINIMUM_USD\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"cheaperWithdraw\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"fund\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"funders\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_funder\",\"type\":\"address\"}],\"name\":\"getAddressToAmountFunded\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"getFunder\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getOwner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getPriceFeed\",\"outputs\":[{\"internalType\":\"contract AggregatorV3Interface\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/FundMe.sol\":\"FundMe\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\ninterface AggregatorV3Interface {\\n  function decimals() external view returns (uint8);\\n\\n  function description() external view returns (string memory);\\n\\n  function version() external view returns (uint256);\\n\\n  // getRoundData and latestRoundData should both raise \\\"No data present\\\"\\n  // if they do not have data to report, instead of returning unset values\\n  // which could be misinterpreted as actual reported values.\\n  function getRoundData(uint80 _roundId)\\n    external\\n    view\\n    returns (\\n      uint80 roundId,\\n      int256 answer,\\n      uint256 startedAt,\\n      uint256 updatedAt,\\n      uint80 answeredInRound\\n    );\\n\\n  function latestRoundData()\\n    external\\n    view\\n    returns (\\n      uint80 roundId,\\n      int256 answer,\\n      uint256 startedAt,\\n      uint256 updatedAt,\\n      uint80 answeredInRound\\n    );\\n}\\n\",\"keccak256\":\"0xf2b6c9adb3552254df1445b73563cf014434ff5e78663e9b961b6c059506ceb5\",\"license\":\"MIT\"},\"contracts/FundMe.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.8;\\n\\nimport \\\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\\\";\\nimport \\\"./PriceConverter.sol\\\";\\n\\nerror FundMe__NotOwner();\\n\\ncontract FundMe {\\n    using PriceConverter for uint256;\\n\\n    mapping(address => uint256) private addressToAmountFunded;\\n    address[] public funders;\\n\\n    // Could we make this constant?  /* hint: no! We should make it immutable! */\\n    address private immutable i_owner;\\n    uint256 public constant MINIMUM_USD = 5 * 10 ** 18;\\n    AggregatorV3Interface private priceFeed;\\n    \\n    constructor(address _priceFeed) {\\n        i_owner = msg.sender;\\n        priceFeed = AggregatorV3Interface(_priceFeed);\\n    }\\n\\n    function fund() public payable {\\n        require(msg.value.getConversionRate(priceFeed) >= MINIMUM_USD, \\\"You need to spend more ETH!\\\");\\n        // require(PriceConverter.getConversionRate(msg.value) >= MINIMUM_USD, \\\"You need to spend more ETH!\\\");\\n        addressToAmountFunded[msg.sender] += msg.value;\\n        funders.push(msg.sender);\\n    }\\n    \\n    // function getVersion() public view returns (uint256){\\n        \\n    //     return priceFeed.version();\\n    // }\\n    \\n    modifier onlyOwner {\\n        // require(msg.sender == owner);\\n        if (msg.sender != i_owner) revert FundMe__NotOwner();\\n        _;\\n    }\\n    \\n    function withdraw() payable onlyOwner public {\\n        for (uint256 funderIndex=0; funderIndex < funders.length; funderIndex++){\\n            address funder = funders[funderIndex];\\n            addressToAmountFunded[funder] = 0;\\n        }\\n        funders = new address[](0);\\n        // // transfer\\n        // payable(msg.sender).transfer(address(this).balance);\\n        // // send\\n        // bool sendSuccess = payable(msg.sender).send(address(this).balance);\\n        // require(sendSuccess, \\\"Send failed\\\");\\n        // call\\n        (bool callSuccess, ) = payable(msg.sender).call{value: address(this).balance}(\\\"\\\");\\n        require(callSuccess, \\\"Call failed\\\");\\n    }\\n\\n    function cheaperWithdraw() public payable onlyOwner {\\n        address[] memory mFuders = funders;\\n        // mapings cannnot be in memory\\n        for(\\n            uint256 funderIndex = 0;\\n            funderIndex < mFuders.length;\\n            funderIndex++\\n        ) {\\n            address funder = mFuders[funderIndex];\\n            addressToAmountFunded[funder] = 0;\\n        }\\n\\n        funders = new address[](0);\\n        (bool callSuccess, ) = i_owner.call{value: address(this).balance}(\\\"\\\");\\n        require(callSuccess, \\\"Call failed\\\");\\n    }\\n\\n    // Explainer from: https://solidity-by-example.org/fallback/\\n    // Ether is sent to contract\\n    //      is msg.data empty?\\n    //          /   \\\\ \\n    //         yes  no\\n    //         /     \\\\\\n    //    receive()?  fallback() \\n    //     /   \\\\ \\n    //   yes   no\\n    //  /        \\\\\\n    //receive()  fallback()\\n\\n    fallback() external payable {\\n        fund();\\n    }\\n\\n    receive() external payable {\\n        fund();\\n    }\\n\\n    function getPriceFeed() public view returns (AggregatorV3Interface) {\\n        return priceFeed;\\n    }\\n\\n    function getOwner() public view returns(address){\\n        return i_owner;\\n    }\\n\\n    function getFunder(uint256 index) public view returns(address ) {\\n        return funders[index];\\n    }\\n\\n    function getAddressToAmountFunded(address _funder) public view  returns(uint) {\\n        return addressToAmountFunded[_funder];\\n    }\\n}\\n\\n// Concepts we didn't cover yet (will cover in later sections)\\n// 1. Enum\\n// 2. Events\\n// 3. Try / Catch\\n// 4. Function Selector\\n// 5. abi.encode / decode\\n// 6. Hash with keccak256\\n// 7. Yul / Assembly\\n\\n\\n\",\"keccak256\":\"0xd1c806722d733b6c72ffe64df5929af0079202cfcc89fc78f6988276e72af7e0\",\"license\":\"MIT\"},\"contracts/PriceConverter.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.8;\\n\\nimport \\\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\\\";\\n\\n// Why is this a library and not abstract?\\n// Why not an interface?\\nlibrary PriceConverter {\\n    // We could make this public, but then we'd have to deploy it\\n    function getPrice(AggregatorV3Interface priceFeed) internal view returns (uint256) {\\n        // Rinkeby ETH / USD Address\\n        // https://docs.chain.link/docs/ethereum-addresses/\\n        (, int256 answer, , , ) = priceFeed.latestRoundData();\\n        // ETH/USD rate in 18 digit\\n        return uint256(answer * 10000000000);\\n    }\\n\\n    // 1000000000\\n    function getConversionRate(uint256 ethAmount, AggregatorV3Interface priceFeed)\\n        internal\\n        view\\n        returns (uint256)\\n    {\\n        uint256 ethPrice = getPrice(priceFeed);\\n        uint256 ethAmountInUsd = (ethPrice * ethAmount) / 1000000000000000000;\\n        // the actual ETH/USD conversion rate, after adjusting the extra 0s.\\n        return ethAmountInUsd;\\n    }\\n}\\n\\n\",\"keccak256\":\"0x9e796a2945d9eddff5a5c47a84c7120df9f6b648f733882bcf586003dc2670c7\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "0x60a06040523480156200001157600080fd5b506040516200139738038062001397833981810160405281019062000037919062000120565b3373ffffffffffffffffffffffffffffffffffffffff1660808173ffffffffffffffffffffffffffffffffffffffff1660601b8152505080600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505062000152565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000620000e882620000bb565b9050919050565b620000fa81620000db565b81146200010657600080fd5b50565b6000815190506200011a81620000ef565b92915050565b600060208284031215620001395762000138620000b6565b5b6000620001498482850162000109565b91505092915050565b60805160601c611211620001866000396000818161037c015281816105ca0152818161061a015261081001526112116000f3fe60806040526004361061008a5760003560e01c80639e87a5cd116100595780639e87a5cd14610140578063b60d42881461016b578063be2693f014610175578063d7b4750c1461017f578063dc0d3dff146101bc57610099565b80630343fb25146100a35780633ccfd60b146100e05780636b69a592146100ea578063893d20e81461011557610099565b36610099576100976101f9565b005b6100a16101f9565b005b3480156100af57600080fd5b506100ca60048036038101906100c59190610b49565b610332565b6040516100d79190610b8f565b60405180910390f35b6100e861037a565b005b3480156100f657600080fd5b506100ff6105ba565b60405161010c9190610b8f565b60405180910390f35b34801561012157600080fd5b5061012a6105c6565b6040516101379190610bb9565b60405180910390f35b34801561014c57600080fd5b506101556105ee565b6040516101629190610c33565b60405180910390f35b6101736101f9565b005b61017d610618565b005b34801561018b57600080fd5b506101a660048036038101906101a19190610c7a565b6108dc565b6040516101b39190610bb9565b60405180910390f35b3480156101c857600080fd5b506101e360048036038101906101de9190610c7a565b610924565b6040516101f09190610bb9565b60405180910390f35b674563918244f40000610237600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff163461096390919063ffffffff16565b1015610278576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161026f90610d04565b60405180910390fd5b346000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546102c69190610d53565b925050819055506001339080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b60008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146103ff576040517f579610db00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60005b6001805490508110156104aa5760006001828154811061042557610424610da9565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905060008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055505080806104a290610dd8565b915050610402565b50600067ffffffffffffffff8111156104c6576104c5610e21565b5b6040519080825280602002602001820160405280156104f45781602001602082028036833780820191505090505b506001908051906020019061050a929190610a3f565b5060003373ffffffffffffffffffffffffffffffffffffffff164760405161053190610e81565b60006040518083038185875af1925050503d806000811461056e576040519150601f19603f3d011682016040523d82523d6000602084013e610573565b606091505b50509050806105b7576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105ae90610ee2565b60405180910390fd5b50565b674563918244f4000081565b60007f0000000000000000000000000000000000000000000000000000000000000000905090565b6000600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461069d576040517f579610db00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6000600180548060200260200160405190810160405280929190818152602001828054801561072157602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190600101908083116106d7575b5050505050905060005b81518110156107ab57600082828151811061074957610748610da9565b5b6020026020010151905060008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055505080806107a390610dd8565b91505061072b565b50600067ffffffffffffffff8111156107c7576107c6610e21565b5b6040519080825280602002602001820160405280156107f55781602001602082028036833780820191505090505b506001908051906020019061080b929190610a3f565b5060007f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff164760405161085290610e81565b60006040518083038185875af1925050503d806000811461088f576040519150601f19603f3d011682016040523d82523d6000602084013e610894565b606091505b50509050806108d8576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108cf90610ee2565b60405180910390fd5b5050565b6000600182815481106108f2576108f1610da9565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b6001818154811061093457600080fd5b906000526020600020016000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60008061096f8361099f565b90506000670de0b6b3a764000085836109889190610f02565b6109929190610f8b565b9050809250505092915050565b6000808273ffffffffffffffffffffffffffffffffffffffff1663feaf968c6040518163ffffffff1660e01b815260040160a06040518083038186803b1580156109e857600080fd5b505afa1580156109fc573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a209190611049565b5050509150506402540be40081610a3791906110c4565b915050919050565b828054828255906000526020600020908101928215610ab8579160200282015b82811115610ab75782518260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555091602001919060010190610a5f565b5b509050610ac59190610ac9565b5090565b5b80821115610ae2576000816000905550600101610aca565b5090565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610b1682610aeb565b9050919050565b610b2681610b0b565b8114610b3157600080fd5b50565b600081359050610b4381610b1d565b92915050565b600060208284031215610b5f57610b5e610ae6565b5b6000610b6d84828501610b34565b91505092915050565b6000819050919050565b610b8981610b76565b82525050565b6000602082019050610ba46000830184610b80565b92915050565b610bb381610b0b565b82525050565b6000602082019050610bce6000830184610baa565b92915050565b6000819050919050565b6000610bf9610bf4610bef84610aeb565b610bd4565b610aeb565b9050919050565b6000610c0b82610bde565b9050919050565b6000610c1d82610c00565b9050919050565b610c2d81610c12565b82525050565b6000602082019050610c486000830184610c24565b92915050565b610c5781610b76565b8114610c6257600080fd5b50565b600081359050610c7481610c4e565b92915050565b600060208284031215610c9057610c8f610ae6565b5b6000610c9e84828501610c65565b91505092915050565b600082825260208201905092915050565b7f596f75206e65656420746f207370656e64206d6f726520455448210000000000600082015250565b6000610cee601b83610ca7565b9150610cf982610cb8565b602082019050919050565b60006020820190508181036000830152610d1d81610ce1565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000610d5e82610b76565b9150610d6983610b76565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03821115610d9e57610d9d610d24565b5b828201905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b6000610de382610b76565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff821415610e1657610e15610d24565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600081905092915050565b50565b6000610e6b600083610e50565b9150610e7682610e5b565b600082019050919050565b6000610e8c82610e5e565b9150819050919050565b7f43616c6c206661696c6564000000000000000000000000000000000000000000600082015250565b6000610ecc600b83610ca7565b9150610ed782610e96565b602082019050919050565b60006020820190508181036000830152610efb81610ebf565b9050919050565b6000610f0d82610b76565b9150610f1883610b76565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0483118215151615610f5157610f50610d24565b5b828202905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6000610f9682610b76565b9150610fa183610b76565b925082610fb157610fb0610f5c565b5b828204905092915050565b600069ffffffffffffffffffff82169050919050565b610fdb81610fbc565b8114610fe657600080fd5b50565b600081519050610ff881610fd2565b92915050565b6000819050919050565b61101181610ffe565b811461101c57600080fd5b50565b60008151905061102e81611008565b92915050565b60008151905061104381610c4e565b92915050565b600080600080600060a0868803121561106557611064610ae6565b5b600061107388828901610fe9565b95505060206110848882890161101f565b945050604061109588828901611034565b93505060606110a688828901611034565b92505060806110b788828901610fe9565b9150509295509295909350565b60006110cf82610ffe565b91506110da83610ffe565b9250827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff048211600084136000841316161561111957611118610d24565b5b817f8000000000000000000000000000000000000000000000000000000000000000058312600084126000841316161561115657611155610d24565b5b827f8000000000000000000000000000000000000000000000000000000000000000058212600084136000841216161561119357611192610d24565b5b827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff05821260008412600084121616156111d0576111cf610d24565b5b82820290509291505056fea264697066735822122082daa1f5e245ca77cdd2974b3b620c7b48b808c51c237bf489515da4119ffcd764736f6c63430008080033",
  "deployedBytecode": "0x60806040526004361061008a5760003560e01c80639e87a5cd116100595780639e87a5cd14610140578063b60d42881461016b578063be2693f014610175578063d7b4750c1461017f578063dc0d3dff146101bc57610099565b80630343fb25146100a35780633ccfd60b146100e05780636b69a592146100ea578063893d20e81461011557610099565b36610099576100976101f9565b005b6100a16101f9565b005b3480156100af57600080fd5b506100ca60048036038101906100c59190610b49565b610332565b6040516100d79190610b8f565b60405180910390f35b6100e861037a565b005b3480156100f657600080fd5b506100ff6105ba565b60405161010c9190610b8f565b60405180910390f35b34801561012157600080fd5b5061012a6105c6565b6040516101379190610bb9565b60405180910390f35b34801561014c57600080fd5b506101556105ee565b6040516101629190610c33565b60405180910390f35b6101736101f9565b005b61017d610618565b005b34801561018b57600080fd5b506101a660048036038101906101a19190610c7a565b6108dc565b6040516101b39190610bb9565b60405180910390f35b3480156101c857600080fd5b506101e360048036038101906101de9190610c7a565b610924565b6040516101f09190610bb9565b60405180910390f35b674563918244f40000610237600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff163461096390919063ffffffff16565b1015610278576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161026f90610d04565b60405180910390fd5b346000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546102c69190610d53565b925050819055506001339080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b60008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146103ff576040517f579610db00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60005b6001805490508110156104aa5760006001828154811061042557610424610da9565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905060008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055505080806104a290610dd8565b915050610402565b50600067ffffffffffffffff8111156104c6576104c5610e21565b5b6040519080825280602002602001820160405280156104f45781602001602082028036833780820191505090505b506001908051906020019061050a929190610a3f565b5060003373ffffffffffffffffffffffffffffffffffffffff164760405161053190610e81565b60006040518083038185875af1925050503d806000811461056e576040519150601f19603f3d011682016040523d82523d6000602084013e610573565b606091505b50509050806105b7576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105ae90610ee2565b60405180910390fd5b50565b674563918244f4000081565b60007f0000000000000000000000000000000000000000000000000000000000000000905090565b6000600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461069d576040517f579610db00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6000600180548060200260200160405190810160405280929190818152602001828054801561072157602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190600101908083116106d7575b5050505050905060005b81518110156107ab57600082828151811061074957610748610da9565b5b6020026020010151905060008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055505080806107a390610dd8565b91505061072b565b50600067ffffffffffffffff8111156107c7576107c6610e21565b5b6040519080825280602002602001820160405280156107f55781602001602082028036833780820191505090505b506001908051906020019061080b929190610a3f565b5060007f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff164760405161085290610e81565b60006040518083038185875af1925050503d806000811461088f576040519150601f19603f3d011682016040523d82523d6000602084013e610894565b606091505b50509050806108d8576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108cf90610ee2565b60405180910390fd5b5050565b6000600182815481106108f2576108f1610da9565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b6001818154811061093457600080fd5b906000526020600020016000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60008061096f8361099f565b90506000670de0b6b3a764000085836109889190610f02565b6109929190610f8b565b9050809250505092915050565b6000808273ffffffffffffffffffffffffffffffffffffffff1663feaf968c6040518163ffffffff1660e01b815260040160a06040518083038186803b1580156109e857600080fd5b505afa1580156109fc573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a209190611049565b5050509150506402540be40081610a3791906110c4565b915050919050565b828054828255906000526020600020908101928215610ab8579160200282015b82811115610ab75782518260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555091602001919060010190610a5f565b5b509050610ac59190610ac9565b5090565b5b80821115610ae2576000816000905550600101610aca565b5090565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610b1682610aeb565b9050919050565b610b2681610b0b565b8114610b3157600080fd5b50565b600081359050610b4381610b1d565b92915050565b600060208284031215610b5f57610b5e610ae6565b5b6000610b6d84828501610b34565b91505092915050565b6000819050919050565b610b8981610b76565b82525050565b6000602082019050610ba46000830184610b80565b92915050565b610bb381610b0b565b82525050565b6000602082019050610bce6000830184610baa565b92915050565b6000819050919050565b6000610bf9610bf4610bef84610aeb565b610bd4565b610aeb565b9050919050565b6000610c0b82610bde565b9050919050565b6000610c1d82610c00565b9050919050565b610c2d81610c12565b82525050565b6000602082019050610c486000830184610c24565b92915050565b610c5781610b76565b8114610c6257600080fd5b50565b600081359050610c7481610c4e565b92915050565b600060208284031215610c9057610c8f610ae6565b5b6000610c9e84828501610c65565b91505092915050565b600082825260208201905092915050565b7f596f75206e65656420746f207370656e64206d6f726520455448210000000000600082015250565b6000610cee601b83610ca7565b9150610cf982610cb8565b602082019050919050565b60006020820190508181036000830152610d1d81610ce1565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000610d5e82610b76565b9150610d6983610b76565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03821115610d9e57610d9d610d24565b5b828201905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b6000610de382610b76565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff821415610e1657610e15610d24565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600081905092915050565b50565b6000610e6b600083610e50565b9150610e7682610e5b565b600082019050919050565b6000610e8c82610e5e565b9150819050919050565b7f43616c6c206661696c6564000000000000000000000000000000000000000000600082015250565b6000610ecc600b83610ca7565b9150610ed782610e96565b602082019050919050565b60006020820190508181036000830152610efb81610ebf565b9050919050565b6000610f0d82610b76565b9150610f1883610b76565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0483118215151615610f5157610f50610d24565b5b828202905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6000610f9682610b76565b9150610fa183610b76565b925082610fb157610fb0610f5c565b5b828204905092915050565b600069ffffffffffffffffffff82169050919050565b610fdb81610fbc565b8114610fe657600080fd5b50565b600081519050610ff881610fd2565b92915050565b6000819050919050565b61101181610ffe565b811461101c57600080fd5b50565b60008151905061102e81611008565b92915050565b60008151905061104381610c4e565b92915050565b600080600080600060a0868803121561106557611064610ae6565b5b600061107388828901610fe9565b95505060206110848882890161101f565b945050604061109588828901611034565b93505060606110a688828901611034565b92505060806110b788828901610fe9565b9150509295509295909350565b60006110cf82610ffe565b91506110da83610ffe565b9250827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff048211600084136000841316161561111957611118610d24565b5b817f8000000000000000000000000000000000000000000000000000000000000000058312600084126000841316161561115657611155610d24565b5b827f8000000000000000000000000000000000000000000000000000000000000000058212600084136000841216161561119357611192610d24565b5b827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff05821260008412600084121616156111d0576111cf610d24565b5b82820290509291505056fea264697066735822122082daa1f5e245ca77cdd2974b3b620c7b48b808c51c237bf489515da4119ffcd764736f6c63430008080033",
  "devdoc": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 58,
        "contract": "contracts/FundMe.sol:FundMe",
        "label": "addressToAmountFunded",
        "offset": 0,
        "slot": "0",
        "type": "t_mapping(t_address,t_uint256)"
      },
      {
        "astId": 61,
        "contract": "contracts/FundMe.sol:FundMe",
        "label": "funders",
        "offset": 0,
        "slot": "1",
        "type": "t_array(t_address)dyn_storage"
      },
      {
        "astId": 73,
        "contract": "contracts/FundMe.sol:FundMe",
        "label": "priceFeed",
        "offset": 0,
        "slot": "2",
        "type": "t_contract(AggregatorV3Interface)45"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_array(t_address)dyn_storage": {
        "base": "t_address",
        "encoding": "dynamic_array",
        "label": "address[]",
        "numberOfBytes": "32"
      },
      "t_contract(AggregatorV3Interface)45": {
        "encoding": "inplace",
        "label": "contract AggregatorV3Interface",
        "numberOfBytes": "20"
      },
      "t_mapping(t_address,t_uint256)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => uint256)",
        "numberOfBytes": "32",
        "value": "t_uint256"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}